{"ast":null,"code":"var _jsxFileName = \"/Users/mr.chiragbhisikar/Desktop/React/my-react-app/src/component/InputElements/PasswordInput.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PasswordInput(props) {\n  _s();\n  const [password, setPassword] = useState(\"\");\n  const [isPasswordSecure, setIsPasswordSecure] = useState([]);\n  const checkPassword = [\"At least one upper case English letter\", \"At least one lower case English letter\", \"At least one digit\", \"At least one special character\", \"Minimum eight in length\"];\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance(password);\n    window.speechSynthesis.speak(msg);\n  };\n  useEffect(() => {\n    let arr = [];\n    return () => {\n      checkPassword.forEach((value, index) => {\n        arr.push(false);\n      });\n    };\n  }, []);\n  const changeInputValue = event => {\n    let value = event.target.value;\n    setPassword(value);\n    let checkPassword = [\"(?=.*?[A-Z])\", \"(?=.*?[a-z])\", \"(?=.*?[0-9])\", \"(?=.*?[#?!@$%^&*-])\", \".{8,}\"];\n    let arr = [];\n    checkPassword.forEach((regex, index) => {\n      if (value.match(regex)) {\n        arr.push(true);\n      } else {\n        arr.push(false);\n      }\n    });\n    setIsPasswordSecure(arr);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 \",\n          children: /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.type,\n            className: \"form-control\",\n            placeholder: props.placeholder,\n            value: password,\n            onChange: changeInputValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), checkPassword.map((value, index) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-check\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              className: \"form-check-input\",\n              type: \"checkbox\",\n              checked: isPasswordSecure[index],\n              id: \"flexCheckIndeterminate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-check-label\",\n              htmlFor: \"flexCheckIndeterminate\",\n              children: value\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this);\n        }), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-auto mt-3\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary \",\n            onClick: () => {\n              console.log(password);\n            },\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            onClick: speak,\n            className: \"btn btn-warning mx-2 my-2\",\n            id: \"toggle\",\n            children: \"Speak\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(PasswordInput, \"cqOkfOOe8yTofSNQxfPQSnluPe8=\");\n_c = PasswordInput;\nPasswordInput.propTypes = {\n  type: propTypes.string.isRequired,\n  // => isRequired Means That is required field\n  placeholder: propTypes.string.isRequired\n};\nPasswordInput.defaultProps = {\n  type: \"password\",\n  placeholder: \"Enter Password\"\n};\nvar _c;\n$RefreshReg$(_c, \"PasswordInput\");","map":{"version":3,"names":["React","useState","useEffect","propTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","PasswordInput","props","_s","password","setPassword","isPasswordSecure","setIsPasswordSecure","checkPassword","speak","msg","SpeechSynthesisUtterance","window","speechSynthesis","arr","forEach","value","index","push","changeInputValue","event","target","regex","match","children","className","type","placeholder","onChange","fileName","_jsxFileName","lineNumber","columnNumber","map","checked","id","htmlFor","onClick","console","log","_c","string","isRequired","defaultProps","$RefreshReg$"],"sources":["/Users/mr.chiragbhisikar/Desktop/React/my-react-app/src/component/InputElements/PasswordInput.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\n\nexport default function PasswordInput(props) {\n  const [password, setPassword] = useState(\"\");\n  const [isPasswordSecure, setIsPasswordSecure] = useState([]);\n\n  const checkPassword = [\n    \"At least one upper case English letter\",\n    \"At least one lower case English letter\",\n    \"At least one digit\",\n    \"At least one special character\",\n    \"Minimum eight in length\",\n  ];\n\n  const speak = () => {\n    let msg = new SpeechSynthesisUtterance(password);\n\n    window.speechSynthesis.speak(msg);\n  };\n\n  useEffect(() => {\n    let arr = [];\n    return () => {\n      checkPassword.forEach((value, index) => {\n        arr.push(false);\n      });\n    };\n  }, []);\n\n  const changeInputValue = (event) => {\n    let value = event.target.value;\n    setPassword(value);\n\n    let checkPassword = [\n      \"(?=.*?[A-Z])\",\n      \"(?=.*?[a-z])\",\n      \"(?=.*?[0-9])\",\n      \"(?=.*?[#?!@$%^&*-])\",\n      \".{8,}\",\n    ];\n\n    let arr = [];\n    checkPassword.forEach((regex, index) => {\n      if (value.match(regex)) {\n        arr.push(true);\n      } else {\n        arr.push(false);\n      }\n    });\n    setIsPasswordSecure(arr);\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"container-fluid\">\n          <div className=\"mb-3 \">\n            <input\n              type={props.type}\n              className=\"form-control\"\n              placeholder={props.placeholder}\n              value={password}\n              onChange={changeInputValue}\n            />\n          </div>\n\n          {checkPassword.map((value, index) => {\n            return (\n              <div className=\"form-check\">\n                <input\n                  className=\"form-check-input\"\n                  type=\"checkbox\"\n                  checked={isPasswordSecure[index]}\n                  id=\"flexCheckIndeterminate\"\n                />\n                <label\n                  className=\"form-check-label\"\n                  htmlFor=\"flexCheckIndeterminate\"\n                >\n                  {value}\n                </label>\n              </div>\n            );\n          })}\n\n          <div className=\"col-auto mt-3\">\n            <button\n              type=\"submit\"\n              className=\"btn btn-primary \"\n              onClick={() => {\n                console.log(password);\n              }}\n            >\n              Submit\n            </button>\n            <button\n              type=\"submit\"\n              onClick={speak}\n              className=\"btn btn-warning mx-2 my-2\"\n              id=\"toggle\"\n            >\n              Speak\n            </button>\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nPasswordInput.propTypes = {\n  type: propTypes.string.isRequired, // => isRequired Means That is required field\n  placeholder: propTypes.string.isRequired,\n};\n\nPasswordInput.defaultProps = {\n  type: \"password\",\n  placeholder: \"Enter Password\",\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}