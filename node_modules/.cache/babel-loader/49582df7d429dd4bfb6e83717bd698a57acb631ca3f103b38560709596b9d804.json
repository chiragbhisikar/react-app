{"ast":null,"code":"var _jsxFileName = \"/Users/mr.chiragbhisikar/Desktop/React/my-react-app/src/component/InputElements/TextForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function TextForm(props) {\n  _s();\n  const [email, setEmail] = useState(\"\");\n  const [isEmailCorrect, setIsEmailCorrect] = useState(false);\n  const changeInputValue = event => {\n    let value = event.target.value;\n    setEmail(value);\n    let regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n    let element = document.getElementById(\"email-input\");\n    if (email.match(regex)) {\n      setIsEmailCorrect(true);\n      element.className = \"form-control is-valid\";\n      props.showAlert(null, null);\n    } else {\n      setIsEmailCorrect(false);\n      element.className = \"form-control is-invalid\";\n      props.showAlert(\"Warning\", \"Enter Valid Email\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Login Form\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-3 \",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: props.heading,\n            className: \"form-label\",\n            children: props.heading\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: props.type,\n            id: \"email-input\",\n            className: \"form-control\",\n            placeholder: props.placeholder,\n            value: email,\n            onChange: changeInputValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(TextForm, \"b53F/bQACy0KaJCJPQJQkZuHEoA=\");\n_c = TextForm;\nTextForm.propTypes = {\n  type: propTypes.string.isRequired,\n  // => isRequired Means That is required field\n  placeholder: propTypes.string.isRequired\n};\nTextForm.defaultProps = {\n  type: \"text\",\n  placeholder: \"Enter Text\"\n};\nvar _c;\n$RefreshReg$(_c, \"TextForm\");","map":{"version":3,"names":["React","useState","useEffect","propTypes","jsxDEV","_jsxDEV","Fragment","_Fragment","TextForm","props","_s","email","setEmail","isEmailCorrect","setIsEmailCorrect","changeInputValue","event","value","target","regex","element","document","getElementById","match","className","showAlert","children","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","heading","type","id","placeholder","onChange","_c","string","isRequired","defaultProps","$RefreshReg$"],"sources":["/Users/mr.chiragbhisikar/Desktop/React/my-react-app/src/component/InputElements/TextForm.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\n\nexport default function TextForm(props) {\n  const [email, setEmail] = useState(\"\");\n  const [isEmailCorrect, setIsEmailCorrect] = useState(false);\n\n  const changeInputValue = (event) => {\n    let value = event.target.value;\n    setEmail(value);\n    let regex = /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/g;\n\n    let element = document.getElementById(\"email-input\");\n\n    if (email.match(regex)) {\n      setIsEmailCorrect(true);\n      element.className = \"form-control is-valid\";\n\n      props.showAlert(null, null);\n    } else {\n      setIsEmailCorrect(false);\n      element.className = \"form-control is-invalid\";\n\n      props.showAlert(\"Warning\", \"Enter Valid Email\");\n    }\n  };\n\n  return (\n    <>\n      <div className=\"container\">\n        <div className=\"container-fluid\">\n          <h1>Login Form</h1>\n          <div className=\"mb-3 \">\n            <label htmlFor={props.heading} className=\"form-label\">\n              {props.heading}\n            </label>\n            <input\n              type={props.type}\n              id=\"email-input\"\n              className=\"form-control\"\n              placeholder={props.placeholder}\n              value={email}\n              onChange={changeInputValue}\n            />\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\nTextForm.propTypes = {\n  type: propTypes.string.isRequired, // => isRequired Means That is required field\n  placeholder: propTypes.string.isRequired,\n};\n\nTextForm.defaultProps = {\n  type: \"text\",\n  placeholder: \"Enter Text\",\n};\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnC,eAAe,SAASC,QAAQA,CAACC,KAAK,EAAE;EAAAC,EAAA;EACtC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,cAAc,EAAEC,iBAAiB,CAAC,GAAGb,QAAQ,CAAC,KAAK,CAAC;EAE3D,MAAMc,gBAAgB,GAAIC,KAAK,IAAK;IAClC,IAAIC,KAAK,GAAGD,KAAK,CAACE,MAAM,CAACD,KAAK;IAC9BL,QAAQ,CAACK,KAAK,CAAC;IACf,IAAIE,KAAK,GAAG,mCAAmC;IAE/C,IAAIC,OAAO,GAAGC,QAAQ,CAACC,cAAc,CAAC,aAAa,CAAC;IAEpD,IAAIX,KAAK,CAACY,KAAK,CAACJ,KAAK,CAAC,EAAE;MACtBL,iBAAiB,CAAC,IAAI,CAAC;MACvBM,OAAO,CAACI,SAAS,GAAG,uBAAuB;MAE3Cf,KAAK,CAACgB,SAAS,CAAC,IAAI,EAAE,IAAI,CAAC;IAC7B,CAAC,MAAM;MACLX,iBAAiB,CAAC,KAAK,CAAC;MACxBM,OAAO,CAACI,SAAS,GAAG,yBAAyB;MAE7Cf,KAAK,CAACgB,SAAS,CAAC,SAAS,EAAE,mBAAmB,CAAC;IACjD;EACF,CAAC;EAED,oBACEpB,OAAA,CAAAE,SAAA;IAAAmB,QAAA,eACErB,OAAA;MAAKmB,SAAS,EAAC,WAAW;MAAAE,QAAA,eACxBrB,OAAA;QAAKmB,SAAS,EAAC,iBAAiB;QAAAE,QAAA,gBAC9BrB,OAAA;UAAAqB,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBzB,OAAA;UAAKmB,SAAS,EAAC,OAAO;UAAAE,QAAA,gBACpBrB,OAAA;YAAO0B,OAAO,EAAEtB,KAAK,CAACuB,OAAQ;YAACR,SAAS,EAAC,YAAY;YAAAE,QAAA,EAClDjB,KAAK,CAACuB;UAAO;YAAAL,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACT,CAAC,eACRzB,OAAA;YACE4B,IAAI,EAAExB,KAAK,CAACwB,IAAK;YACjBC,EAAE,EAAC,aAAa;YAChBV,SAAS,EAAC,cAAc;YACxBW,WAAW,EAAE1B,KAAK,CAAC0B,WAAY;YAC/BlB,KAAK,EAAEN,KAAM;YACbyB,QAAQ,EAAErB;UAAiB;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC,gBACN,CAAC;AAEP;AAACpB,EAAA,CA9CuBF,QAAQ;AAAA6B,EAAA,GAAR7B,QAAQ;AAgDhCA,QAAQ,CAACL,SAAS,GAAG;EACnB8B,IAAI,EAAE9B,SAAS,CAACmC,MAAM,CAACC,UAAU;EAAE;EACnCJ,WAAW,EAAEhC,SAAS,CAACmC,MAAM,CAACC;AAChC,CAAC;AAED/B,QAAQ,CAACgC,YAAY,GAAG;EACtBP,IAAI,EAAE,MAAM;EACZE,WAAW,EAAE;AACf,CAAC;AAAC,IAAAE,EAAA;AAAAI,YAAA,CAAAJ,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}