{"ast":null,"code":"var _jsxFileName = \"/Users/mr.chiragbhisikar/Desktop/React/my-react-app/src/component/Navbar.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Navbar(props) {\n  _s();\n  const {\n    heading,\n    setHeading\n  } = useState(\"\");\n  const darkMode = () => {\n    props.setDarkMode();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: `navbar navbar-expand-lg  ${props.darkmodestatus ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\"} `,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container-fluid\",\n        children: [/*#__PURE__*/_jsxDEV(Link, {\n          className: \"navbar-brand\",\n          to: \"/\",\n          children: props.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"navbar-toggler\",\n          type: \"button\",\n          \"data-bs-toggle\": \"collapse\",\n          \"data-bs-target\": \"#navbarSupportedContent\",\n          \"aria-controls\": \"navbarSupportedContent\",\n          \"aria-expanded\": \"false\",\n          \"aria-label\": \"Toggle navigation\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"navbar-toggler-icon\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"collapse navbar-collapse\",\n          id: \"navbarSupportedContent\",\n          children: [/*#__PURE__*/_jsxDEV(\"ul\", {\n            className: \"navbar-nav me-auto mb-2 mb-lg-0\",\n            children: [/*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"nav-link active\",\n                \"aria-current\": \"page\",\n                to: \"/\",\n                children: \"Home\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n              className: \"nav-item\",\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                className: \"nav-link\",\n                to: \"/about\",\n                children: \"About\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-flex\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `form-check form-switch ${props.darkmodestatus ? \"text-light\" : \"text-dark\"} `,\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                className: `form-check-input\n              ${props.darkmodestatus ? \"btn btn-light mx-2 btn-outline-light\" : \"btn btn-light mx-2 btn-outline-dark\"}`,\n                type: \"checkbox\"\n                // id=\"flexSwitchCheckDefault\"\n                ,\n                onClick: () => {\n                  darkMode();\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n                className: \"form-check-label\",\n                htmlFor: \"flexSwitchCheckDefault\",\n                children: \"Dark Mode\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_s(Navbar, \"2LBnRLb4rZ0uSPbUyZ1z0axmmGk=\");\n_c = Navbar;\nNavbar.propTypes = {\n  name: propTypes.string.isRequired // => isRequired Means That is required field\n};\nNavbar.defaultProps = {\n  name: \"TitleUtils\"\n};\nvar _c;\n$RefreshReg$(_c, \"Navbar\");","map":{"version":3,"names":["React","useState","useEffect","propTypes","Link","jsxDEV","_jsxDEV","Fragment","_Fragment","Navbar","props","_s","heading","setHeading","darkMode","setDarkMode","children","className","darkmodestatus","to","name","fileName","_jsxFileName","lineNumber","columnNumber","type","id","onClick","htmlFor","_c","string","isRequired","defaultProps","$RefreshReg$"],"sources":["/Users/mr.chiragbhisikar/Desktop/React/my-react-app/src/component/Navbar.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport propTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\n\nexport default function Navbar(props) {\n  const { heading, setHeading } = useState(\"\");\n\n  const darkMode = () => {\n    props.setDarkMode();\n  };\n\n  return (\n    <>\n      <nav\n        className={`navbar navbar-expand-lg  ${\n          props.darkmodestatus ? \"navbar-dark bg-dark\" : \"navbar-light bg-light\"\n        } `}\n      >\n        <div className=\"container-fluid\">\n          <Link className=\"navbar-brand\" to=\"/\">\n            {props.name}\n          </Link>\n          <button\n            className=\"navbar-toggler\"\n            type=\"button\"\n            data-bs-toggle=\"collapse\"\n            data-bs-target=\"#navbarSupportedContent\"\n            aria-controls=\"navbarSupportedContent\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\"></span>\n          </button>\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n              <li className=\"nav-item\">\n                <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">\n                  Home\n                </Link>\n              </li>\n              <li className=\"nav-item\">\n                <Link className=\"nav-link\" to=\"/about\">\n                  About\n                </Link>\n              </li>\n            </ul>\n\n            {/* <div className={`form-color`}>\n              <input\n                className={`form-color-input\n              ${\n                props.darkmodestatus\n                  ? \"btn btn-light mx-2 btn-outline-light\"\n                  : \"btn btn-light mx-2 btn-outline-dark\"\n              }`}\n                type=\"color\"\n                onChange={(event) => {\n                  let value = event.target.value;\n                  props.setColorByInput(value);\n                }}\n              />\n            </div> */}\n\n            <div className=\"d-flex\">\n              <div\n                className={`form-check form-switch ${\n                  props.darkmodestatus ? \"text-light\" : \"text-dark\"\n                } `}\n              >\n                <input\n                  className={`form-check-input\n              ${\n                props.darkmodestatus\n                  ? \"btn btn-light mx-2 btn-outline-light\"\n                  : \"btn btn-light mx-2 btn-outline-dark\"\n              }`}\n                  type=\"checkbox\"\n                  // id=\"flexSwitchCheckDefault\"\n                  onClick={() => {\n                    darkMode();\n                  }}\n                />\n                <label\n                  className=\"form-check-label\"\n                  htmlFor=\"flexSwitchCheckDefault\"\n                >\n                  Dark Mode\n                </label>\n              </div>\n            </div>\n          </div>\n        </div>\n      </nav>\n    </>\n  );\n}\n\nNavbar.propTypes = {\n  name: propTypes.string.isRequired, // => isRequired Means That is required field\n};\n\nNavbar.defaultProps = {\n  name: \"TitleUtils\",\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}